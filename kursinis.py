# -*- coding: utf-8 -*-
"""Kursinis2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-hcRERdly0D6BrrVfn_W1QQhfq0Y4PqG
"""

import os
from datetime import datetime

class RoomFactory:
    def create_room(self, type, number):
        if type == "Single":
            return SingleRoom(number)
        elif type == "Double":
            return DoubleRoom(number)
        else:
            raise ValueError("Invalid room type")

class Hotel:
    _instance = None

    def __new__(cls, *args, **kwargs):
        if not cls._instance:
            cls._instance = super(Hotel, cls).__new__(cls)
        return cls._instance

    def __init__(self, name, room_factory):
        self.name = name
        self.rooms = []
        self.room_factory = room_factory

    def add_room(self, type, number):
        room = self.room_factory.create_room(type, number)
        self.rooms.append(room)

    def book_room(self, guest, room_number, check_in_date, check_out_date):
        room_exists = False
        for room in self.rooms:
            if room.number == room_number:
                room_exists = True
                if room.is_booked:
                    print(f"Sorry, room {room.number} is already booked.")
                    return
                elif datetime.strptime(check_in_date, '%Y-%m-%d') > datetime.strptime(check_out_date, '%Y-%m-%d'):
                    print("Check-in date cannot be later than check-out date. Please enter corrected date.")
                    return
                else:
                    room.book_room(guest, check_in_date, check_out_date)
                    with open("rooms.txt", "a") as file:
                        file.write(f"Booked Room: {room.number}\n")
                    print(f"Room {room.number} has been successfully booked for {guest.name}.")
                    with open("guests.txt", "a") as file:
                        file.write(f"Guest: {guest.name}, Room: {room.number}, Check-in: {check_in_date}, Check-out: {check_out_date}\n")
                    return
        if not room_exists:
            print(f"Sorry, room {room_number} does not exist.")

    def print_available_rooms(self):
        print("Available rooms:")
        for room in self.rooms:
            if not room.is_booked:
                print(f"Room {room.number} ({room.type}) - {room.description}")

class Room:
    def __init__(self, number, type):
        self.number = number
        self.type = type
        self.is_booked = False
        if self.type == "Single":
            self.description = "A single room with one bed and a bathroom along with a mini fridge, tv. Area: 25 square meters."
        elif self.type == "Double":
            self.description = "A double room with two beds and a bathroom along with a mini fridge, tv. Area: 35 square meters."

    def book_room(self, guest, check_in_date, check_out_date):
        if not self.is_booked:
            self.is_booked = True
            return True
        else:
            return False

class Guest:
    def __init__(self, name):
        self.name = name

class SingleRoom(Room):
    def __init__(self, number):
        super().__init__(number, "Single")

class DoubleRoom(Room):
    def __init__(self, number):
        super().__init__(number, "Double")

# Usage:
room_factory = RoomFactory()
hotel = Hotel("My Hotel", room_factory)

# Add 10 single rooms and 10 double rooms
for i in range(101, 111):
    hotel.add_room("Single", i)
for i in range(201, 211):
    hotel.add_room("Double", i)

# Loadin'a rservations rooms.txt
if os.path.exists("rooms.txt"):
    with open("rooms.txt", "r") as file:
        for line in file:
            if line.strip():
                data = line.strip().split(": ")
                room_number = int(data[1])
                booked = data[0].startswith("Booked")
                for room in hotel.rooms:
                    if room.number == room_number and booked:
                        room.is_booked = True

while True:
    # Ask for the guest's full name
    guest_name = input("Please enter your full name (or 'stop' to end): ")
    if guest_name.lower() == 'stop':
        break

    # Create a new guest
    guest = Guest(guest_name)

    # datos
    print("Please enter your check-in and check-out dates in the format YYYY-MM-DD.")
    check_in_date = input(" check-in date: ")
    check_out_date = input(" your check-out date: ")

    #  available rooms
    hotel.print_available_rooms()

    # sking for room number
    room_number = int(input(" enter the room number you want to book: "))

    #bookin't kambari
    hotel.book_room(guest, room_number, check_in_date, check_out_date)